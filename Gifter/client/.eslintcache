[{"C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\index.js":"1","C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\App.js":"3","C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\components\\PostList.js":"4","C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\components\\Post.js":"5","C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\components\\PostForm.js":"6","C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\components\\Header.js":"7","C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\components\\ApplicationViews.js":"8","C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\components\\PostDetails.js":"9","C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\components\\Login.js":"10","C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\components\\Register.js":"11","C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\providers\\UserProfileProvider.js":"12"},{"size":703,"mtime":1610744396314,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":518,"mtime":1610746941159,"results":"16","hashOfConfig":"14"},{"size":742,"mtime":1610746347281,"results":"17","hashOfConfig":"14"},{"size":733,"mtime":1610729890774,"results":"18","hashOfConfig":"14"},{"size":2811,"mtime":1610729613942,"results":"19","hashOfConfig":"14"},{"size":744,"mtime":1610729378744,"results":"20","hashOfConfig":"14"},{"size":877,"mtime":1610747035633,"results":"21","hashOfConfig":"14"},{"size":1021,"mtime":1610729638656,"results":"22","hashOfConfig":"14"},{"size":1465,"mtime":1610744516009,"results":"23","hashOfConfig":"14"},{"size":2613,"mtime":1610744535495,"results":"24","hashOfConfig":"14"},{"size":2800,"mtime":1610747776415,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lfv97",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\index.js",[],"C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\reportWebVitals.js",[],["53","54"],"C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\App.js",[],"C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\components\\PostList.js",[],"C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\components\\Post.js",[],"C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\components\\PostForm.js",["55","56"],"import React, { useState } from \"react\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Card,\r\n    CardBody,\r\n    Label,\r\n    Input,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst PostForm = () => {\r\n\r\n    const [userProfileId, setUserProfileId] = useState(\"\");\r\n    const [imageUrl, setImageUrl] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [caption, setCaption] = useState(\"\");\r\n\r\n    // Use this hook to allow us to programatically redirect users\r\n    const history = useHistory();\r\n\r\n    const addPost = (post) => {\r\n\r\n        return fetch('api/post', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(post)\r\n        })\r\n            .then(res => res.json());\r\n    }\r\n    const submit = (e) => {\r\n        const post = {\r\n            imageUrl,\r\n            title,\r\n            caption,\r\n            userProfileId: +userProfileId,\r\n        };\r\n\r\n        addPost(post).then((p) => {\r\n            // Navigate the user back to the home route\r\n            history.push(\"/\");\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                <Form className=\"postForm\"\r\n                    onSubmit={e => {\r\n                        e.preventDefault()\r\n                        // constructNewPost()\r\n                    }}>\r\n                    <FormGroup>\r\n                        <Label for=\"title\">Title\r\n                        </Label>\r\n                        <Input type=\"text\" name=\"title\" id=\"\">Post Title\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"imageUrl\">Add a Gif Link\r\n                        </Label>\r\n                        <Input type=\"text\" name=\"imageUrl\" id=\"\">https://media.giphy.com/media/XZrOvaUvmsCYL31HIe/giphy.gif\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"caption\">Caption\r\n                        </Label>\r\n                        <Input type=\"text\" name=\"caption\" id=\"\">Post Title\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Input type=\"hidden\" name=\"UserProfileId\" id=\"\">Post Title\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Input type=\"hidden\" name=\"dateCreated\" id=\"\">Post Title\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <Button type=\"submit\"></Button>\r\n                </Form>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default PostForm;","C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\components\\Header.js",[],"C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\components\\ApplicationViews.js",[],"C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\components\\PostDetails.js",["57"],"import React, { useEffect, useState } from \"react\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Post from \"./Post\";\r\n\r\nconst PostDetails = () => {\r\n    const [post, setPost] = useState();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        fetch(`/api/posts/${id}`)\r\n            .then(res => res.json())\r\n            .then(post => setPost(post));\r\n    }, []);\r\n\r\n    if (!post) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-sm-12 col-lg-6\">\r\n                    <Post post={post} />\r\n                    <ListGroup>\r\n                        {post.comments.map((c) => (\r\n                            <ListGroupItem>{c.message}</ListGroupItem>\r\n                        ))}\r\n                    </ListGroup>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostDetails;","C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\components\\Login.js",[],"C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\components\\Register.js",[],"C:\\Users\\Joe\\workspace\\Gifter\\Gifter\\client\\src\\providers\\UserProfileProvider.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":27},{"ruleId":"62","severity":1,"message":"66","line":6,"column":11,"nodeType":"64","messageId":"65","endLine":6,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":14,"column":8,"nodeType":"69","endLine":14,"endColumn":10,"suggestions":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'addPost' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["73"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [id]",{"range":"76","text":"77"},[437,439],"[id]"]